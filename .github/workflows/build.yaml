name: Build Binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-standard:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: yugo-linux-amd64
            asset_name: yugo-linux-amd64
            goos: linux
            goarch: amd64
          - os: windows-latest
            artifact_name: yugo-windows-amd64.exe
            asset_name: yugo-windows-amd64
            goos: windows
            goarch: amd64
          - os: macos-latest
            artifact_name: yugo-darwin-amd64
            asset_name: yugo-darwin-amd64
            goos: darwin
            goarch: amd64

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        cache: true

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -v -o ${{ matrix.artifact_name }} .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.artifact_name }}
        retention-days: 5

  build-mac-arm:
    name: Build for macOS ARM
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        cache: true

    - name: Build for macOS ARM
      env:
        GOOS: darwin
        GOARCH: arm64
      run: |
        go build -v -o yugo-darwin-arm64 .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: yugo-darwin-arm64
        path: yugo-darwin-arm64
        retention-days: 5

  create-release:
    name: Create Release
    needs: [build-standard, build-mac-arm]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Create Release Directory
      run: mkdir -p release
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: release
        
    - name: List Files
      run: ls -R release
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/yugo-linux-amd64/yugo-linux-amd64
          release/yugo-windows-amd64/yugo-windows-amd64.exe
          release/yugo-darwin-amd64/yugo-darwin-amd64
          release/yugo-darwin-arm64/yugo-darwin-arm64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}